{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","redux/actions.js","redux/reducer.js","redux/store.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Container/Container.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","itemsReducer","createReducer","actions","state","filter","filterReducer","_","combineReducers","items","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","rootReducer","contacts","phoneBookReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","getContacts","getFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","ContactForm","useSelector","dispatch","useDispatch","useState","setName","setNumber","handleChange","event","currentTarget","value","className","styles","form","onSubmit","e","preventDefault","find","contact","checkName","checkNumber","alert","label","input","type","pattern","title","required","placeholder","onChange","button","ContactList","map","item","onClick","onDeleteContact","Filter","target","Container","children","container","App","contactsLength","length","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.c1f517d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__AAPUa\",\"button\":\"ContactList_button__1i9gu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1djI1\",\"filter\":\"Filter_filter__3FIl8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__NHSMD\"};","import shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contacts/add', (name, number) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\n\nexport const deleteContact = createAction('contacts/delete');\nexport const changeFilter = createAction('contacts/changeFilter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './actions';\n\nconst itemsReducer = createReducer(\n  [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ],\n  {\n    [actions.addContact]: (state, { payload }) => [...state, payload],\n    [actions.deleteContact]: (state, { payload }) =>\n      state.filter(({ id }) => id !== payload),\n  },\n);\n\nconst filterReducer = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport phoneBookReducer from './reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst rootReducer = combineReducers({\n  contacts: phoneBookReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from '../../redux/selectors';\nimport * as actions from '../../redux/actions';\nimport styles from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const resetName = () => {\n    setName('');\n  };\n\n  const resetNumber = () => {\n    setNumber('');\n  };\n\n  const checkName = name => {\n    return contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const checkNumber = number => {\n    return contacts.find(contact => contact.number === number);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (checkName(name)) {\n      alert(`${name} is already in contacts`);\n    } else if (checkNumber(number)) {\n      alert(`${number} is already in your contacts!`);\n    } else {\n      dispatch(actions.addContact(name, number));\n    }\n\n    resetName();\n    resetNumber();\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.label}>\n        Name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          placeholder=\"Adrian Smith\"\n          onChange={handleChange}\n        />\n      </label>\n\n      <label className={styles.label}>\n        Number\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          placeholder=\"000-00-00\"\n          onChange={handleChange}\n        />\n      </label>\n      <button className={styles.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getVisibleContacts } from '../../redux/selectors';\nimport * as actions from '../../redux/actions';\nimport styles from './ContactList.module.css';\n\nexport default function ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(actions.deleteContact(id));\n\n  return (\n    <ul>\n      {contacts.map(({ name, number, id }) => (\n        <li key={id} className={styles.item}>\n          {name}: {number}\n          <button\n            className={styles.button}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/selectors';\nimport * as actions from '../../redux/actions';\nimport styles from './Filter.module.css';\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onChange = event => dispatch(actions.changeFilter(event.target.value));\n\n  return (\n    <>\n      <label className={styles.filter}>\n        Find contacts by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={onChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import { useSelector } from 'react-redux';\nimport { getContacts } from './redux/selectors';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport Container from './components/Container';\nimport './App.css';\n\nexport default function App() {\n  const contacts = useSelector(getContacts);\n\n  const contactsLength = contacts.length;\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      {contactsLength > 1 && <Filter />}\n\n      {contactsLength > 0 ? (\n        <ContactList />\n      ) : (\n        <p>Currently your phonebook has no contacts. Please add them.</p>\n      )}\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3mWAy\",\"label\":\"ContactForm_label__2WWjU\",\"input\":\"ContactForm_input__10Yim\",\"button\":\"ContactForm_button__141i2\"};"],"sourceRoot":""}